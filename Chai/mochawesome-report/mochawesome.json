{
  "stats": {
    "suites": 10,
    "tests": 10,
    "passes": 9,
    "pending": 1,
    "failures": 0,
    "start": "2021-05-26T22:42:45.460Z",
    "end": "2021-05-26T22:42:45.483Z",
    "duration": 23,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 10,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "76d2de78-6389-4cee-960f-d84a099bbba6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2be55006-4717-451a-9299-0a1c1c39a2fc",
          "title": "#sum()",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-bdd.js",
          "file": "\\test\\example-bdd.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"#sum()\"",
              "fullTitle": "#sum() \"before each\" hook in \"#sum()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// ...some logic before each test is run",
              "err": {},
              "uuid": "09c9cf76-5d8a-4797-8aaa-0a941fa0de18",
              "parentUUID": "2be55006-4717-451a-9299-0a1c1c39a2fc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add numbers",
              "fullTitle": "#sum() should add numbers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// add an assertion\nexpect([1, 2, 3, 4, 5].reduce((a, b) => a + b, 0)).to.equal(15);",
              "err": {},
              "uuid": "b17edf12-a065-4430-98e8-d9b3edf4ac42",
              "parentUUID": "2be55006-4717-451a-9299-0a1c1c39a2fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b17edf12-a065-4430-98e8-d9b3edf4ac42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "decc3152-6009-4922-bf68-8c01b8088d92",
          "title": "#sum() Success",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-context.js",
          "file": "\\test\\example-context.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2cc78a04-c906-4416-b7b8-59286a2d8637",
              "title": "without arguments",
              "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-context.js",
              "file": "\\test\\example-context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 0",
                  "fullTitle": "#sum() Success without arguments should return 0",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum()).to.equal(0);",
                  "err": {},
                  "uuid": "aa4f1beb-c242-472a-a349-067751c5a0e1",
                  "parentUUID": "2cc78a04-c906-4416-b7b8-59286a2d8637",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa4f1beb-c242-472a-a349-067751c5a0e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3ccb783a-1153-4eaa-9d47-9fd4dcd058ba",
              "title": "with number arguments",
              "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-context.js",
              "file": "\\test\\example-context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return sum of arguments",
                  "fullTitle": "#sum() Success with number arguments should return sum of arguments",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(sum(1, 2, 3, 4, 5)).to.equal(15);",
                  "err": {},
                  "uuid": "c09e7789-b5c3-49c0-ab02-defa7521a878",
                  "parentUUID": "3ccb783a-1153-4eaa-9d47-9fd4dcd058ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c09e7789-b5c3-49c0-ab02-defa7521a878"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d70ad5bd-bb47-4665-b2fc-43ce5d17903c",
          "title": "#Sum() Error",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-context.js",
          "file": "\\test\\example-context.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f7ff6e9d-ae97-433f-ac63-0bd8d6138715",
              "title": "with non-number arguments",
              "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-context.js",
              "file": "\\test\\example-context.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw error",
                  "fullTitle": "#Sum() Error with non-number arguments should throw error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9f2e6eda-f77e-42ca-8636-d3ff872b2889",
                  "parentUUID": "f7ff6e9d-ae97-433f-ac63-0bd8d6138715",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "9f2e6eda-f77e-42ca-8636-d3ff872b2889"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "27b59d9f-1553-4fff-9b34-62b3dbbaba1b",
          "title": "#Array ",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-describe.js",
          "file": "\\test\\example-describe.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is array of numbers",
              "fullTitle": "#Array  is array of numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(assert.isArray(numbers, 'is array of numbers'));",
              "err": {},
              "uuid": "b9a0ac68-5665-4300-a6c3-b8ba10c0de5f",
              "parentUUID": "27b59d9f-1553-4fff-9b34-62b3dbbaba1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9a0ac68-5665-4300-a6c3-b8ba10c0de5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fabd8854-400f-4ef2-8a14-8a9ffe7b9c46",
          "title": "PatientController Test",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-plugin-chai-spies.js",
          "file": "\\test\\example-plugin-chai-spies.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"PatientController Test\"",
              "fullTitle": "PatientController Test \"before each\" hook in \"PatientController Test\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "PatientController = function (name, age) {\n  this.name = name;\n  this.age = age;\n  this.initializePatientEvents();\n};\nPatientController.prototype.initializePatientEvents = function () {\n  console.log(\"Do some initialization stuff here\");\n};\ninitializePatientEventsSpy = sinon.spy(\n  PatientController.prototype,\n  \"initializePatientEvents\"\n);",
              "err": {},
              "uuid": "87970bb7-4487-4b8b-93c9-63b1b9d7da98",
              "parentUUID": "fabd8854-400f-4ef2-8a14-8a9ffe7b9c46",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should test initializePatientEvents was called",
              "fullTitle": "PatientController Test should test initializePatientEvents was called",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "patient = new PatientController(\"Willson\", 30);\ninitializePatientEventsSpy.should.have.been.called;",
              "err": {},
              "uuid": "790c700d-11df-4fce-bb41-134e17f92696",
              "parentUUID": "fabd8854-400f-4ef2-8a14-8a9ffe7b9c46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "790c700d-11df-4fce-bb41-134e17f92696"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fdeb18fb-3a10-4ebe-9a84-b1d87e70264e",
          "title": "Yo como programador necesito probar el funcionando del plugin chai-as-promised para Testear las promesas ",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-plugin-promise-chai.js",
          "file": "\\test\\example-plugin-promise-chai.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Valida que la promesa sumar retorne un valor numerico",
              "fullTitle": "Yo como programador necesito probar el funcionando del plugin chai-as-promised para Testear las promesas  Valida que la promesa sumar retorne un valor numerico",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await getPosts(5, 5).then((r) => {\n  expect(r).to.be.a(\"number\");\n});",
              "err": {},
              "uuid": "9f62942f-2faf-4c09-805c-ce928e51c61c",
              "parentUUID": "fdeb18fb-3a10-4ebe-9a84-b1d87e70264e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Valida que se controlan los errores en la promesa",
              "fullTitle": "Yo como programador necesito probar el funcionando del plugin chai-as-promised para Testear las promesas  Valida que se controlan los errores en la promesa",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await getPosts(5, \"s\").should.be.rejected;",
              "err": {},
              "uuid": "2c567551-87b9-4745-b4a3-f24fe5a1f672",
              "parentUUID": "fdeb18fb-3a10-4ebe-9a84-b1d87e70264e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f62942f-2faf-4c09-805c-ce928e51c61c",
            "2c567551-87b9-4745-b4a3-f24fe5a1f672"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e4b1270-65fb-4ee4-8dda-e0931122a90a",
          "title": "Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack ",
          "fullFile": "D:\\GitHub\\Testing\\testing-frontend\\Chai\\test\\example-plugin-sinon-chai.js",
          "file": "\\test\\example-plugin-sinon-chai.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack \"",
              "fullTitle": "Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack  \"before each\" hook in \"Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack \"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cb = sinon.spy();",
              "err": {},
              "uuid": "27f75757-2301-4606-aea7-1d29c0838992",
              "parentUUID": "2e4b1270-65fb-4ee4-8dda-e0931122a90a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "validar callBack de una funcion que retorna un texto",
              "fullTitle": "Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack  validar callBack de una funcion que retorna un texto",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "hello(\"foo\", cb);\ncb.should.have.been.calledWith(\"hello foo\");",
              "err": {},
              "uuid": "6d672530-7c7f-43ae-bb2f-e59e0d04b432",
              "parentUUID": "2e4b1270-65fb-4ee4-8dda-e0931122a90a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validar callBack de la Funcion Suma",
              "fullTitle": "Yo como programador necesito probar el funcionando del plugin sinon-chai para Testear las funciones callBack  validar callBack de la Funcion Suma",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "myCalculator(5, 5, cb);\ncb.should.have.been.calledWith(10);",
              "err": {},
              "uuid": "66765f93-182c-4a8b-b475-6519f6009bab",
              "parentUUID": "2e4b1270-65fb-4ee4-8dda-e0931122a90a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d672530-7c7f-43ae-bb2f-e59e0d04b432",
            "66765f93-182c-4a8b-b475-6519f6009bab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}